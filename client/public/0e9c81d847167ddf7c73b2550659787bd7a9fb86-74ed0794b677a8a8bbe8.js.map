{"version":3,"sources":["webpack:///./src/molecules/in-page-nav.tsx","webpack:///./src/templates/boat.components.tsx"],"names":["slugify","str","toLowerCase","replace","InPageNav","boatName","titles","onClickInquire","useState","current","setCurrent","useToggle","isMenuOpen","toggleIsMenuOpen","isMobileMenu","useMedia","setInquiryModalState","useInquiryModalState","useEffect","window","IntersectionObserver","console","log","anchors","Array","from","document","querySelectorAll","ratiosMap","Map","map","el","observer","entries","forEach","target","intersectionRatio","set","currentAnchor","size","keys","find","get","getCurrentAnchor","dataset","inPageNav","threshold","observe","disconnect","CaretIcon","CaretUpIcon","CaretDownIcon","className","clsx","onClick","type","variant","as","length","DropdownMenu","MobileMenu","InPageAnchor","title","id","data-in-page-nav","long","short","key","href","isOpen","base","afterOpen","beforeClose","overlayClassName","onRequestClose","hidden","block","role","aria-modal","link","sm","BoatHeader","image","alt","videoUrl","boatLogo","boatNameLong","eyebrow","ctaText","headline","onClickCta","stats","hasScrolled","setHasScrolled","useViewportScroll","scrollY","onChange","x","md","lg","xl","discoverSection","getElementById","discoverTopOffset","offsetParent","offsetTop","scroll","top","behavior","ratio","videoOptions","controls","src","stat","label","statLabel","percentage","statPercentage","text","statText","div","animate","opacity","BoatSection","children","theme","rest","MobileSectionHeader","CarouselButtons","disabledNext","disabledPrev","onClickNext","onClickPrev","icon","ArrowIcon","iconClassName","disabled","aria-label","PowertrainSectionComponent","heroImage","options","moreDetails","name","selectedOption","setSelectedOption","details","data-section-type","url","Math","random","active","option","detail","info","PowertrainTab","Comp","props","OrderSectionComponent","media","style","position","HorizontalImageTextBlockComponent","content","layout","publicURL","data-block-type","MoreDetailsBlockComponent","buttonText","toggleIsOpen","initial","exit","variants","open","height","collapsed","transition","duration","ease","child","index","extractedBlock","header","copy","TextBlockComponent","split","filter","Boolean","p"],"mappings":"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","file":"0e9c81d847167ddf7c73b2550659787bd7a9fb86-74ed0794b677a8a8bbe8.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\nimport clsx from 'clsx'\nimport { Typography } from '../atoms/typography'\nimport { CaretDownIcon, CaretUpIcon, AngleIcon } from '../svgs/icons'\nimport Modal from 'react-modal'\nimport { useMedia, useToggle } from 'react-use'\nimport { Link } from 'gatsby'\nimport { useHeaderState } from './header'\nimport { useInquiryModalState } from '../molecules/inquiry/inquiry-modal'\n\nconst slugify = (str: string) => {\n  if (!!str) {\n    return str.toLowerCase().replace(/\\W/g, '_').replace(/_+/, '_')\n  }\n\n  return 'undefined'\n}\n\nconst extractName = (el: Element) => (el as HTMLElement).dataset.inPageNav || ''\n\nconst getCurrentAnchor = (map: Map<Element, number>) => {\n  if (map.size === 0) return\n  return Array.from(map.keys()).find((el) => map.get(el)! > 0)\n}\n\nexport interface InPageNavProps {\n  boatName: string\n  titles: string[][]\n  onClickInquire: (state: boolean) => void\n}\n\nexport const InPageNav = ({\n  boatName,\n  titles,\n  onClickInquire,\n}: InPageNavProps) => {\n  // TODO: determine if we actually want this\n  // const [headerState] = useHeaderState()\n  const [current, setCurrent] = useState('')\n  const [isMenuOpen, toggleIsMenuOpen] = useToggle(false)\n  const isMobileMenu = useMedia('(max-width: 1023px)')\n  const [, setInquiryModalState] = useInquiryModalState()\n\n  useEffect(() => {\n    if (!window.IntersectionObserver) return\n\n    console.log('from in page nav')\n\n    const anchors = Array.from(document.querySelectorAll('[data-in-page-nav]'))\n    const ratiosMap = new Map(Array.from(anchors).map((el) => [el, 0]))\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach(({ target, intersectionRatio }) => {\n          ratiosMap.set(target, intersectionRatio)\n        })\n        const currentAnchor = getCurrentAnchor(ratiosMap)\n        if (!currentAnchor) return\n        setCurrent(extractName(currentAnchor))\n      },\n      { threshold: [0, 1] }\n    )\n\n    anchors.forEach((el) => observer.observe(el))\n\n    return () => observer.disconnect()\n  }, [])\n\n  const CaretIcon = isMenuOpen ? CaretUpIcon : CaretDownIcon\n\n  return (\n    <Fragment>\n      <div\n        className={clsx(\n          'sticky top-0 left-0 w-full z-30 text-white transform duration-200 ease-in-out'\n          // { 'translate-y-20': headerState === 'pinned' }\n        )}\n      >\n        <div className=\"h-12 bg-gray-0 px-4\">\n          <div\n            className={clsx(\n              'h-full flex justify-between items-center border-b border-transparent border-opacity-25 max-w-8xl mx-auto',\n              { 'border-white': !isMobileMenu && isMenuOpen }\n            )}\n          >\n            <button\n              onClick={() => toggleIsMenuOpen()}\n              type=\"button\"\n              className=\"flex items-center\"\n            >\n              <CaretIcon className=\"text-red mr-4\" />\n              <div className=\"md:hidden\">\n                <Typography variant=\"e2\" as=\"span\">\n                  {!!titles.length && current === titles[0][0]\n                    ? boatName\n                    : current}\n                </Typography>\n              </div>\n              <div className=\"hidden md:flex items-center\">\n                <Typography variant=\"e2\" as=\"span\">\n                  {boatName}\n                </Typography>\n                {!!titles.length && current !== titles[0][0] && (\n                  <Fragment>\n                    <AngleIcon className=\"h-6 mx-4\" />\n                    <Typography variant=\"e2\" as=\"span\">\n                      {current}\n                    </Typography>\n                  </Fragment>\n                )}\n              </div>\n            </button>\n            <button\n              onClick={() => {\n                setInquiryModalState(true)\n              }}\n            >\n              <Typography variant=\"e2\">Request Information</Typography>\n            </button>\n          </div>\n        </div>\n        {!isMobileMenu && isMenuOpen && (\n          <DropdownMenu\n            current={current}\n            titles={titles}\n            toggleIsMenuOpen={toggleIsMenuOpen}\n          />\n        )}\n      </div>\n      <MobileMenu\n        boatName={boatName}\n        current={current}\n        isMenuOpen={isMobileMenu && isMenuOpen}\n        titles={titles}\n        toggleIsMenuOpen={toggleIsMenuOpen}\n      />\n    </Fragment>\n  )\n}\n\nexport const InPageAnchor = ({ title }: { title: string }) => {\n  return (\n    <a\n      className=\"absolute inset-0 -z-index-1 mt-px\"\n      id={slugify(title)}\n      data-in-page-nav={title}\n    ></a>\n  )\n}\n\nfunction DropdownMenu({\n  current,\n  titles,\n  toggleIsMenuOpen,\n}: {\n  current: string\n  titles: string[][]\n  toggleIsMenuOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) {\n  return (\n    <div className=\"flex justify-center items-center bg-gray-0 h-10 -mb-10 space-x-6\">\n      {titles.map(([long, short]) => {\n        return (\n          <a\n            key={`dropdownNavItem-${short}`}\n            href={`#${slugify(long)}`}\n            onClick={() => toggleIsMenuOpen(false)}\n          >\n            <Typography\n              variant=\"e2\"\n              as=\"span\"\n              className={clsx('whitespace-no-wrap', {\n                'text-red': long === current,\n              })}\n            >\n              {short || long}\n            </Typography>\n          </a>\n        )\n      })}\n    </div>\n  )\n}\n\nfunction MobileMenu({\n  boatName,\n  current,\n  isMenuOpen,\n  titles,\n  toggleIsMenuOpen,\n}: {\n  boatName: string\n  current: string\n  isMenuOpen: boolean\n  titles: string[][]\n  toggleIsMenuOpen: React.Dispatch<React.SetStateAction<boolean>>\n}) {\n  return (\n    <Modal\n      isOpen={isMenuOpen}\n      className={{ base: 'absolute inset-0', afterOpen: '', beforeClose: '' }}\n      overlayClassName=\"fixed inset-0 z-40\"\n      onRequestClose={() => toggleIsMenuOpen(false)}\n    >\n      <div\n        className={clsx(\n          'relative z-50 min-h-screen bg-black flex flex-col px-4 text-white',\n          {\n            hidden: !isMenuOpen,\n            block: !!isMenuOpen,\n          }\n        )}\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <button\n          onClick={() => toggleIsMenuOpen(false)}\n          className=\"h-20 flex items-center\"\n        >\n          <CaretUpIcon className=\"text-red mr-4\" />\n          <Typography variant=\"e2\">{boatName}</Typography>\n        </button>\n        <div className=\"mt-10 flex flex-col items-start\">\n          {titles.map(([link]) => {\n            return (\n              <div key={link} className=\"relative mb-6\">\n                <a\n                  href={`#${slugify(link)}`}\n                  onClick={() => toggleIsMenuOpen(false)}\n                >\n                  <Typography variant=\"h5\" sm=\"h4\" as=\"span\">\n                    {link}\n                  </Typography>\n                </a>\n                {link === current && (\n                  <div className=\"absolute border-b border-t border-red w-full top-1/2\"></div>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </Modal>\n  )\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Typography } from '../atoms/typography'\nimport { InPageCta } from '../atoms/in-page-cta'\nimport { StatBlock } from '../atoms/stat-block'\nimport { Theme } from '../types/shared'\nimport clsx from 'clsx'\nimport { ArrowIcon, CaretDownIcon, CaretUpIcon } from '../svgs/icons'\nimport { CircleButton } from '../atoms/circle-button'\nimport { AspectRatio, AspectRatioProps, Ratio } from '../atoms/aspect-ratio'\nimport { InPageAnchor } from '../molecules/in-page-nav'\nimport { VerticalHeader } from '../atoms/vertical-header'\nimport { ScrollPrompter } from '../molecules/header'\nimport { VerticalLabel } from '../atoms/vertical-label'\nimport {\n  Media,\n  TwoColumnImageTextBlock,\n  OneColumnTextBlock,\n  OneColumnImageTextBlock,\n  HorizontalImageTextBlock,\n} from '../types/common'\nimport { Stat, SpecsSection, OrderSection, Spec } from '../types/boat'\nimport { Tab } from '../atoms/tab'\nimport { AnimatePresence, motion, useViewportScroll } from 'framer-motion'\nimport { useToggle } from 'react-use'\nimport { AutoplayVideo } from '../atoms/autoplay-video'\nimport {\n  InquiryModal,\n  useInquiryModalState,\n} from '../molecules/inquiry/inquiry-modal'\n\nexport const BoatHeader = ({\n  image,\n  alt,\n  videoUrl,\n  boatLogo,\n  boatNameLong,\n  eyebrow,\n  ctaText,\n  onClickCta,\n  headline,\n  stats,\n}: {\n  image: string\n  alt?: string\n  videoUrl?: string\n  boatLogo: string\n  boatNameLong: string\n  eyebrow: string\n  onClickCta: (state: boolean) => void\n  ctaText?: string\n  headline: string\n  stats: Stat[]\n}) => {\n  const [hasScrolled, setHasScrolled] = useState(false)\n  const { scrollY } = useViewportScroll()\n\n  scrollY.onChange((x) => {\n    x > 10 ? setHasScrolled(true) : setHasScrolled(false)\n  })\n\n  useEffect(() => {\n    setHasScrolled(false)\n  }, [])\n\n  return (\n    <section className=\"bg-black text-white pt-32 pb-4 md:min-h-screen md:flex flex-col justify-between relative\">\n      <div />\n      <div className=\"relative z-10\">\n        <Typography variant=\"e2\" md=\"e2\" className=\"text-center mb-8 md:mb-4\">\n          {eyebrow || boatNameLong}\n        </Typography>\n        <Typography\n          variant=\"h4\"\n          md=\"h3\"\n          lg=\"h2\"\n          xl=\"h1\"\n          className=\"text-center mb-8 md:mb-10 max-w-2xl lg:max-w-3xl mx-auto\"\n        >\n          {headline}\n        </Typography>\n        <div className=\"relative mb-4 justify-center hidden md:flex\">\n          <InPageCta\n            onClick={() => {\n              const discoverSection = document.getElementById('discover')\n              const discoverTopOffset = discoverSection?.offsetParent?.offsetTop\n              window.scroll({\n                top: discoverTopOffset,\n                behavior: 'smooth',\n              })\n            }}\n            href=\"#discover\"\n          >\n            {ctaText || `Explore more`}\n          </InPageCta>\n        </div>\n      </div>\n      <div className=\"mb-8 md:absolute md:h-full md:top-0 w-full\">\n        {!!videoUrl ? (\n          <AspectRatio ratio=\"16:9\" md=\"none\" className=\"md:h-full\">\n            <AutoplayVideo\n              image={image}\n              alt={alt}\n              videoUrl={videoUrl}\n              videoOptions={{ controls: false }}\n            />\n          </AspectRatio>\n        ) : (\n          <Fragment>\n            <img src={`${image}`} className=\"h-full w-full object-cover\" />\n          </Fragment>\n        )}\n      </div>\n      <div className=\"hidden bg-black bg-opacity-10 absolute inset-0 md:block\"></div>\n      <div className=\"relative z-10\">\n        <div className=\"relative flex justify-center mb-8 md:mb-10\">\n          {!!boatLogo && (\n            <img src={boatLogo} alt={boatNameLong} className=\"max-w-xs\" />\n          )}\n        </div>\n        <div className=\"relative flex px-4 space-x-6 mb-10 md:mb-6 max-w-2xl mx-auto\">\n          {stats.map((stat) => (\n            <div key={stat.label || stat.statLabel} className=\"flex-1\">\n              <StatBlock\n                label={stat.label || stat.statLabel}\n                percentage={stat.percentage || stat.statPercentage}\n                text={stat.text || stat.statText}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"relative mb-4 flex justify-center hidden\">\n        <InPageCta href=\"/contact\" link={true}>\n          Request Information\n        </InPageCta>\n      </div>\n      <div className=\"hidden md:block fixed bottom-0 left-0 w-full mb-8 pointer-events-none\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div animate={{ opacity: hasScrolled ? 0 : 1 }}>\n            <ScrollPrompter />\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport const BoatSection: React.FC<{\n  theme?: Theme\n  className?: string\n  style?: object\n}> = ({ children, className, theme = 'light', ...rest }) => (\n  <section\n    className={clsx(\n      'relative py-12 overflow-hidden',\n      {\n        'bg-black text-white': theme === 'dark',\n      },\n      className\n    )}\n    {...rest}\n  >\n    {children}\n  </section>\n)\n\nexport const MobileSectionHeader: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => (\n  <div className=\"px-4\">\n    <Typography\n      variant=\"h4\"\n      className={clsx('text-center px-4 text-gray-4 mb-8 md:hidden', className)}\n    >\n      {children}\n    </Typography>\n  </div>\n)\n\nexport const CarouselButtons = ({\n  className,\n  theme = 'dark',\n  disabledNext = false,\n  disabledPrev = false,\n  onClickNext,\n  onClickPrev,\n}: {\n  className?: string\n  theme?: Theme\n  disabledNext?: boolean\n  disabledPrev?: boolean\n  onClickNext?: React.MouseEventHandler<HTMLButtonElement>\n  onClickPrev?: React.MouseEventHandler<HTMLButtonElement>\n}) => (\n  <div className={clsx('flex justify-center space-x-4', className)}>\n    <CircleButton\n      icon={ArrowIcon}\n      theme={theme}\n      variant=\"secondary\"\n      iconClassName=\"transform rotate-180\"\n      onClick={onClickPrev}\n      disabled={disabledPrev}\n      aria-label=\"Previous\"\n    />\n    <CircleButton\n      icon={ArrowIcon}\n      theme={theme}\n      variant=\"secondary\"\n      onClick={onClickNext}\n      disabled={disabledNext}\n      aria-label=\"Next\"\n    />\n  </div>\n)\n\nexport const ImageWithLabel = ({\n  imgClassName,\n  label,\n  ratio,\n  src,\n  alt,\n  ...rest\n}: {\n  imgClassName?: string\n  label?: string\n  src: GatsbyTypes.File\n  alt?: string\n} & AspectRatioProps) => (\n  <AspectRatio ratio={ratio} {...rest}>\n    <img\n      src={`${src}?q=30&w=1000`}\n      className={clsx('h-full w-full object-cover', imgClassName)}\n      alt={alt || ''}\n      style={{ position: 'absolute' }}\n    />\n    {label && (\n      <VerticalLabel className=\"absolute bottom-0 left-0\">\n        {label}\n      </VerticalLabel>\n    )}\n  </AspectRatio>\n)\n\ntype Side = 'left' | 'right'\n\nexport const SideBleedImage = ({\n  className,\n  imgClassName,\n  media,\n  ratio = '3:2',\n  side,\n  size = 'default',\n}: {\n  className?: string\n  imgClassName?: string\n  media: Media\n  ratio?: Ratio\n  side: Side\n  size?: 'default' | 'large'\n}) => {\n  return (\n    <div className={clsx(className)} data-block-type=\"SideBleedImage\">\n      <div\n        className={clsx('w-full md:w-11/12 lg:w-10/12 xl:w-9/12', {\n          'ml-auto': side === 'right',\n          'mr-auto': side === 'left',\n          'xl:w-9/12': size === 'default',\n        })}\n      >\n        <AspectRatio ratio={ratio}>\n          <img\n            src={`${media}?q=30&w=2000`}\n            alt=\"\"\n            className={clsx('h-full w-full object-cover', imgClassName)}\n            style={{ position: 'absolute' }}\n          />\n        </AspectRatio>\n      </div>\n    </div>\n  )\n}\n\nexport const PowertrainSectionComponent = ({\n  heroImage,\n  options,\n  moreDetails,\n}: {\n  heroImage: string\n  options: any\n  moreDetails: any\n}) => {\n  const [selectedOption, setSelectedOption] = useState<string>(\n    options?.[0]?.name\n  )\n  return (\n    <BoatSection\n      className={clsx('overflow-hidden', {\n        'pb-0': moreDetails?.details?.length,\n        'pb-24': !moreDetails?.details?.length,\n      })}\n      data-section-type=\"Powertrain Section\"\n    >\n      <InPageAnchor title=\"Powertrain Options\" />\n      <div className=\"relative max-w-7xl mx-auto flex flex-col items-center\">\n        <div className=\"px-4 md:mb-12 md:mt-8 lg:mt-16\">\n          <img src={`${heroImage?.[0]?.url}?q=30&w=2000`} alt=\"\" />\n        </div>\n        <div className=\"md:flex max-w-5xl w-full px-4\">\n          <div className=\"md:hidden flex flex-no-wrap p-4 space-x-4 my-14 overflow-x-auto\">\n            {!!options.length &&\n              options.map(({ name }) => (\n                <PowertrainTab\n                  key={name || Math.random()}\n                  className=\"whitespace-no-wrap\"\n                  active={name === selectedOption}\n                  onClick={() => setSelectedOption(name)}\n                >\n                  {name}\n                </PowertrainTab>\n              ))}\n          </div>\n          <div className=\"hidden md:block md:flex-1 space-y-4\">\n            {!!options.length &&\n              options.map(({ name }: any) => (\n                <PowertrainTab\n                  key={name}\n                  className=\"whitespace-no-wrap\"\n                  active={name === selectedOption}\n                  onClick={() => setSelectedOption(name)}\n                >\n                  {name}\n                </PowertrainTab>\n              ))}\n          </div>\n          <div className=\"flex-1 space-y-4 mt-2 pl-4 md:pl-12\">\n            {!!options.length &&\n              options\n                .find((option: any) => option?.name === selectedOption)\n                .details.map((detail: any) => (\n                  <ul key={detail?.name}>\n                    <li>\n                      <Typography variant=\"e3\">{detail?.name}</Typography>\n                      <Typography variant=\"p3\">{detail?.info}</Typography>\n                    </li>\n                  </ul>\n                ))}\n          </div>\n        </div>\n      </div>\n      {!!moreDetails?.details?.length && (\n        <div className=\"pt-10\">\n          <MoreDetailsBlockComponent {...moreDetails} />\n        </div>\n      )}\n    </BoatSection>\n  )\n}\n\nexport const SpecsSectionComponent = ({\n  title,\n  categories,\n  boatNameLong,\n}: SpecsSection & { boatNameLong: string }) => {\n  const [selectedCategory, setSelectedCategory] = useState<string>(\n    categories[0]?.name\n  )\n\n  return (\n    <BoatSection\n      className=\"md:py-24 bg-offWhite overflow-hidden\"\n      data-section-type=\"Specs Section\"\n    >\n      <InPageAnchor title={title} />\n      <div className=\"relative flex max-w-7xl mx-auto\">\n        <div className=\"hidden md:block absolute right-0 top-0\">\n          <VerticalHeader theme=\"light\" className=\"mr-4\">\n            {title}\n          </VerticalHeader>\n        </div>\n        <div className=\"hidden md:block px-4 space-y-2 md:w-48 lg:w-56 xl:w-64 mt-24\">\n          {!!categories.length &&\n            categories.map(({ name }) => (\n              <Tab\n                key={name}\n                className=\"w-auto whitespace-no-wrap\"\n                active={name === selectedCategory}\n                onClick={() => setSelectedCategory(name)}\n              >\n                {name}\n              </Tab>\n            ))}\n        </div>\n        <div className=\"max-w-2xl w-full\">\n          <div className=\"px-4 md:px-0 md:mb-16\">\n            <Typography variant=\"h4\">{boatNameLong} Specs</Typography>\n          </div>\n          <div className=\"md:hidden flex flex-no-wrap p-4 space-x-4 my-10 overflow-x-auto\">\n            {!!categories.length &&\n              categories.map(({ name }) => (\n                <Tab\n                  key={name}\n                  className=\"whitespace-no-wrap\"\n                  active={name === selectedCategory}\n                  onClick={() => setSelectedCategory(name)}\n                >\n                  {name}\n                </Tab>\n              ))}\n          </div>\n          <div className=\"px-4 md:px-0 grid col-gap-6 grid-cols-2 mb-10\">\n            {!!categories.length &&\n              categories\n                .find((category) => category.name === selectedCategory)!\n                .specs?.map((spec, index) => (\n                  <SpecAccordion key={spec.name + index} {...spec} />\n                ))}\n          </div>\n          {/* <div className=\"flex justify-center md:justify-start mb-2\">\n            <InPageCta variant=\"secondary\" theme=\"light\">\n              <span className=\"flex items-center\">\n                <PlusIcon className=\"inline-block text-red mr-2 text-lg\" />\n                <span>More Specs</span>\n              </span>\n            </InPageCta>\n          </div> */}\n        </div>\n      </div>\n    </BoatSection>\n  )\n}\n\ninterface PowertrainTabProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  active?: boolean\n  as?: keyof JSX.IntrinsicElements | React.ReactType\n}\n\nexport const PowertrainTab = ({\n  active,\n  as: Comp = 'button',\n  className,\n  children,\n  ...props\n}: PowertrainTabProps) => {\n  return (\n    <Comp\n      {...props}\n      className={clsx(\n        'block py-px border-b border-transparent hover:text-red',\n        className,\n        {\n          'text-red border-red': active,\n        }\n      )}\n    >\n      <Typography variant=\"h5\" md=\"h4\" as=\"span\" className=\"normal-case\">\n        {children}\n      </Typography>\n    </Comp>\n  )\n}\n\nconst SpecAccordion = ({ name, descriptions }: Spec) => {\n  return (\n    <div className=\"py-8 border-t border-gray-5\">\n      <div className={clsx('mb-2 flex', {})}>\n        <Typography variant=\"e3\" className=\"flex-1\">\n          {name}\n        </Typography>\n      </div>\n      <AnimatePresence initial={false}>\n        <div>\n          {descriptions.map((description) => (\n            <Typography\n              key={description}\n              variant=\"p3\"\n              className=\"mb-2 text-gray-2 md:w-11/12\"\n            >\n              {description}\n            </Typography>\n          ))}\n        </div>\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport const OrderSectionComponent = ({\n  boatNameLong,\n  title,\n  media,\n  onClickCta,\n}: OrderSection & {\n  boatNameLong: string\n  onClickCta: (state: boolean) => void\n}) => {\n  const [, setInquiryModalState] = useInquiryModalState()\n\n  return (\n    <BoatSection\n      className=\"pb-48 sm:py-48\"\n      data-section-type=\"OrderSectionComponent\"\n    >\n      <InPageAnchor title={title} />\n      <img\n        src={`${media}?q=30&w=2400`}\n        alt=\"\"\n        className=\"h-full w-full object-cover top-0\"\n        style={{ position: 'absolute' }}\n      />\n      <div className=\"absolute inset-0 bg-black bg-opacity-10\"></div>\n      <div className=\"relative px-4 text-white text-center mb-48 sm:mb-0 max-w-7xl mx-auto\">\n        <div className=\"bg-black bg-opacity-75 py-16 sm:py-20 px-4 max-w-md\">\n          <Typography variant=\"h3\" sm=\"h2\" className=\"mb-6\">\n            {title}\n          </Typography>\n          <Typography variant=\"e2\" className=\"mb-12\">\n            {boatNameLong}\n          </Typography>\n          <div className=\"flex justify-center\">\n            <InPageCta\n              onClick={() => {\n                setInquiryModalState(true)\n              }}\n            >\n              Request Information\n            </InPageCta>\n          </div>\n        </div>\n      </div>\n    </BoatSection>\n  )\n}\n\n// ===================================\n// BLOCKS\n// ===================================\nexport const OneColumnTextBlockComponent = ({\n  align = 'left',\n  header,\n  copy,\n}: OneColumnTextBlock) => (\n  <div\n    className=\"my-12 px-4 xl:pl-0 mb-32 max-w-5xl mx-auto\"\n    data-block-type=\"OneColumnTextBlockComponent\"\n  >\n    <TextBlockComponent\n      className={clsx({\n        'max-w-xl mr-auto text-left': align === 'left',\n        'max-w-2xl mx-auto text-center': align === 'center',\n        'max-w-xl ml-auto text-right': align === 'right',\n      })}\n      header={header}\n      copy={copy}\n    />\n  </div>\n)\n\nexport const OneColumnImageTextBlockComponent = ({\n  content,\n  media,\n}: OneColumnImageTextBlock) => (\n  <div\n    className=\"max-w-7xl mx-auto\"\n    data-block-type=\"OneColumnImageTextBlockComponent\"\n  >\n    <AspectRatio ratio=\"3:2\" className=\"overflow-hidden\">\n      {!!media?.videoURL ? (\n        <AutoplayVideo\n          image={media?.image}\n          alt={media?.alt}\n          videoUrl={media?.videoURL}\n          videoOptions={{ controls: false }}\n        />\n      ) : (\n        <Fragment>\n          <img\n            src={`${media?.image}?q=30&w=2000`}\n            alt=\"\"\n            className=\"h-full w-full object-cover\"\n            style={{ position: 'absolute' }}\n          />\n        </Fragment>\n      )}\n    </AspectRatio>\n    <div className=\"md:flex justify-center my-8 md:my-16 mb-20 md:mb-24 px-4 xl:px-0 \">\n      <TextBlockComponent\n        className=\"md:w-3/4 text-center max-w-6xl\"\n        {...content}\n      />\n    </div>\n  </div>\n)\n\nexport const TwoColumnImageTextBlockComponent = ({\n  children,\n}: TwoColumnImageTextBlock) => (\n  <div\n    className=\"md:flex md:mb-24 md:px-12 lg:px-16 max-w-7xl mx-auto\"\n    data-block-type=\"TwoColumnImageTextBlockComponent\"\n  >\n    <div className=\"md:w-1/2 lg:pr-12\">\n      <TextBlockComponent\n        className=\"my-12 px-4 lg:px-0 lg:ml-12 md:mb-32 lg:mb-48\"\n        header={children?.[0].textBlock?.[0].header}\n        copy={children?.[0].textBlock?.[0].copy}\n      />\n      <div className=\"px-4 lg:px-0 mb-12 md:mb-0\">\n        <ImageWithLabel\n          ratio=\"3:4\"\n          src={children[0].singleMedia?.[0].image?.[0].url}\n          alt={children[0].singleMedia?.[0].alt}\n          label={children[0].singleMedia?.[0].label}\n        />\n      </div>\n    </div>\n    <div className=\"md:w-1/2 lg:pl-12\">\n      <div className=\"px-4 lg:px-0 lg:pr-16\">\n        {children[1].singleMedia?.alt}\n        <ImageWithLabel\n          ratio=\"3:4\"\n          src={children?.[1].singleMedia?.[0].image?.[0].url}\n          alt={children[1].singleMedia?.[0].alt}\n          label={children[1].singleMedia?.[0].label}\n        />\n      </div>\n      <TextBlockComponent\n        className=\"my-10 md:my-16 px-4 lg:px-0 lg:pr-16\"\n        header={children?.[1].textBlock?.[0].header}\n        copy={children?.[1].textBlock?.[0].copy}\n      />\n    </div>\n  </div>\n)\n\nexport const HorizontalImageTextBlockComponent = ({\n  content,\n  layout,\n  media,\n}: HorizontalImageTextBlock) => {\n  const image = <img src={`${media.image.publicURL}?q=30&w=2000`} />\n  const text = (\n    <div className=\"px-4 md:px-0 md:w-3/4 lg:w-2/3\">\n      <TextBlockComponent {...content} />\n    </div>\n  )\n  return (\n    <div\n      className=\"flex flex-col md:flex-row max-w-7xl mx-auto pb-16 md:pb-32\"\n      data-block-type=\"HorizontalImageTextBlockComponent\"\n    >\n      <div\n        className={clsx(\n          `md:w-1/2 flex flex-col justify-center items-center mb-12 md:mb-0`,\n          {\n            ['order-2 md:order-none']: layout === 'imageOnRight',\n          }\n        )}\n      >\n        {layout === 'imageOnLeft' ? image : text}\n      </div>\n      <div\n        className={clsx(`md:w-1/2 flex flex-col justify-center items-center`, {\n          ['order-1 mb-12 md:mb-auto md:order-none']: layout === 'imageOnRight',\n        })}\n      >\n        {layout === 'imageOnLeft' ? text : image}\n      </div>\n    </div>\n  )\n}\n\nexport const MoreDetailsBlockComponent = ({ buttonText, details }: any) => {\n  const [isOpen, toggleIsOpen] = useToggle(false)\n  return (\n    <div data-block-type=\"MoreDetailsBlockComponent\">\n      <div className=\"flex justify-center mb-10 md:mb-20\">\n        <InPageCta\n          variant=\"secondary\"\n          onClick={() => {\n            toggleIsOpen()\n          }}\n        >\n          <span className=\"flex items-center group\">\n            {isOpen ? (\n              <CaretUpIcon className=\"inline-block text-red mr-2 text-lg group-hover:text-white\" />\n            ) : (\n              <CaretDownIcon className=\"inline-block text-red mr-2 text-lg group-hover:text-white\" />\n            )}\n            <span>{buttonText}</span>\n          </span>\n        </InPageCta>\n      </div>\n      <div className=\"overflow-hidden mb-10\">\n        <AnimatePresence initial={false}>\n          {isOpen && (\n            <motion.div\n              key=\"descriptions\"\n              initial=\"collapsed\"\n              animate=\"open\"\n              exit=\"collapsed\"\n              variants={{\n                open: { opacity: 1, height: 'auto' },\n                collapsed: { opacity: 0, height: 0 },\n              }}\n              transition={{ duration: 0.5, ease: 'easeInOut' }}\n            >\n              <div>\n                {details.map((child: any, index: number) => {\n                  const extractedBlock: HorizontalImageTextBlock = {\n                    type: 'horizontal-image-text',\n                    layout: child.layout,\n                    content: {\n                      header: child.header as string,\n                      copy: child.copy as string,\n                    },\n                    media: {\n                      image: {\n                        publicURL: child.image as string,\n                      },\n                    },\n                  }\n                  return (\n                    <HorizontalImageTextBlockComponent\n                      key={`${child.header} - ${index}`}\n                      {...extractedBlock}\n                    />\n                  )\n                })}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  )\n}\n\nexport const TwoUpImageBlock = ({\n  className,\n  images,\n}: {\n  className?: string\n  images: [Media, Media]\n}) => (\n  <div\n    className={clsx('max-w-7xl mx-auto sm:flex', className)}\n    data-block-type=\"TwoUpImageBlock\"\n  >\n    <div className=\"sm:first:pr-4 mb-16 md:mb-0 flex-1\">\n      <AspectRatio ratio=\"3:4\">\n        <img\n          src={`${images[0].singleMedia?.[0].image?.[0].url}?q=30&w=1000`}\n          alt=\"\"\n          className=\"h-full w-full object-cover\"\n          style={{ position: 'absolute' }}\n        />\n      </AspectRatio>\n    </div>\n    <div className=\"sm:last:pl-4 mb-16 md:mb-0 flex-1\">\n      <AspectRatio ratio=\"3:4\">\n        <img\n          src={`${images[1].singleMedia?.[0].image?.[0].url}`}\n          alt=\"\"\n          className=\"h-full w-full object-cover\"\n          style={{ position: 'absolute' }}\n        />\n      </AspectRatio>\n    </div>\n  </div>\n)\n\nexport const ThreeUpImageBlock = ({\n  className,\n  images,\n}: {\n  className?: string\n  images: [Media, Media, Media]\n}) => (\n  <div\n    className={clsx('sm:flex max-w-7xl mx-auto', className)}\n    data-block-type=\"ThreeUpImageBlock\"\n  >\n    {!!images &&\n      !!images.length &&\n      images.map((media, i) => {\n        return (\n          <div\n            key={`${media?.singleMedia?.[0].image?.[0].url}-${i}`}\n            className=\"px-4 mb-16 sm:w-1/3\"\n          >\n            <ImageWithLabel\n              ratio=\"3:4\"\n              src={`${media?.singleMedia?.[0].image?.[0].url}?q=30&w=1000`}\n              alt={media.alt || ''}\n              label={media?.singleMedia?.[0].label}\n            />\n          </div>\n        )\n      })}\n  </div>\n)\n\nexport const TextBlockComponent = ({\n  className = '',\n  copy,\n  header,\n}: {\n  className?: string\n  header: string\n  copy: string\n}) => (\n  <div className={className} data-block-type=\"TextBlockComponent\">\n    <Typography variant=\"e2\" className=\"mb-4\">\n      {header}\n    </Typography>\n    {copy\n      ?.split('\\n')\n      ?.filter(Boolean)\n      .map((p) => {\n        return (\n          <Typography className=\"mb-4 last:mb-0\" key={p} variant=\"p2\">\n            {p}\n          </Typography>\n        )\n      })}\n  </div>\n)\n\nexport const VerticalHeaderBlock = ({\n  className,\n  label,\n  side,\n  theme,\n}: {\n  className?: string\n  label: string\n  theme: Theme\n  side: Side\n}) => (\n  <div\n    className={clsx(\n      'max-w-7xl 3xl:max-w-10xl mx-auto relative md:mt-16',\n      className\n    )}\n  >\n    <div\n      className={clsx('hidden md:block absolute top-0', {\n        'left-0': side === 'left',\n        'right-0': side === 'right',\n      })}\n    >\n      <VerticalHeader\n        theme={theme}\n        className={clsx({ 'ml-4': side === 'left', 'mr-4': side === 'right' })}\n      >\n        {label}\n      </VerticalHeader>\n    </div>\n  </div>\n)\n"],"sourceRoot":""}