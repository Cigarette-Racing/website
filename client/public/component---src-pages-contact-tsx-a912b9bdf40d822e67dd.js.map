{"version":3,"sources":["webpack:///./src/pages/contact.tsx"],"names":["ContactPage","props","metadata","useMetadataQuery","data","craftAPI","title","slug","path","image","entry","heroBackground","url","Section","theme","className","FullBgImage","variant","subtitle","style","fontSize","lineHeight","IconWithContent","icon","PhoneIcon","href","phoneNumber","raw","pretty","MapIcon","address","street","city","state","zip","IconLink","socialLinks","youtube","YoutubeIcon","instagram","InstagramIcon","facebook","FacebookIcon","contact2ColumnContent","map","block","contactContentBlock","ContentColumn","key","header","buttonText","buttonLabel","emailAddresses","email","copy","text","careers","singleMedia","md","link","clsx","src","alt","position","Icon","children","lg","target"],"mappings":"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","file":"component---src-pages-contact-tsx-a912b9bdf40d822e67dd.js","sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { graphql, PageProps } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { Layout } from '../components/layout'\nimport SEO from '../components/seo'\nimport { Typography } from '../atoms/typography'\nimport {\n  PhoneIcon,\n  MailIcon,\n  MapIcon,\n  YoutubeIcon,\n  InstagramIcon,\n  FacebookIcon,\n} from '../svgs/icons'\nimport { InPageCta } from '../atoms/in-page-cta'\nimport { Theme } from '../types/shared'\nimport { useMetadataQuery } from '../services/metadata'\n\nconst ContactPage = (props: PageProps<GatsbyTypes.ContactImagesQuery>) => {\n  const metadata = useMetadataQuery()\n  const {\n    data: { craftAPI: data },\n  } = props\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Contact Us\"\n        slug={props.path}\n        image={data.entry.heroBackground[0].image[0].url!}\n      />\n      <Section\n        theme=\"dark\"\n        className=\"min-h-screen flex justify-center items-center text-center\"\n      >\n        <FullBgImage image={data.entry.heroBackground[0].image[0].url!} />\n        <div className=\"relative\">\n          <Typography variant=\"h1\" className=\"mb-8\">\n            {data.entry.title}\n          </Typography>\n          <Typography variant=\"e1\">{data.entry.subtitle}</Typography>\n        </div>\n      </Section>\n      <Section theme=\"dark\" className=\"py-20 lg:py-12\">\n        <div className=\"divide-y divide-gray-2 lg:flex lg:divide-y-0 max-w-6xl mx-auto justify-between\">\n          <div className=\"relative lg:w-7/12 xl:w-1/2\">\n            <div\n              className=\"absolute left-1/2 transform -translate-x-1/2 font-heading text-center leading-none text-gray-1 lg:flex\"\n              style={{ fontSize: '22.5rem', lineHeight: 0.9 }}\n            >\n              <div>H</div>\n              <div>Q</div>\n            </div>\n            <div className=\"relative space-y-24 text-center py-20 lg:space-y-12 lg:pl-24 lg:py-12\">\n              <IconWithContent icon={PhoneIcon}>\n                <a href={`tel:${metadata.phoneNumber?.raw}`}>\n                  {metadata.phoneNumber?.pretty}\n                </a>\n              </IconWithContent>\n              <IconWithContent icon={MapIcon}>\n                <address className=\"not-italic\">\n                  {metadata.address?.street}, <br className=\"lg:hidden\" />\n                  {metadata.address?.city}, {metadata.address?.state}{' '}\n                  {metadata.address?.zip}\n                </address>\n              </IconWithContent>\n            </div>\n          </div>\n          <div className=\"space-y-16 text-center py-20 lg:w-1/3 lg:space-y-8 lg:text-left lg:flex flex-col justify-center\">\n            <Typography variant=\"e1\" className=\"lg:pl-2\">\n              Stay Connected\n            </Typography>\n            <div className=\"flex justify-center space-x-16 text-2xl lg:justify-start\">\n              <IconLink\n                href={metadata.socialLinks?.youtube!}\n                icon={YoutubeIcon}\n              />\n              <IconLink\n                href={metadata.socialLinks?.instagram!}\n                icon={InstagramIcon}\n              />\n              <IconLink\n                href={metadata.socialLinks?.facebook!}\n                icon={FacebookIcon}\n              />\n            </div>\n          </div>\n        </div>\n      </Section>\n      {/* Removing for now: https://trello.com/c/X44hNZIA/182-disable-owner-support-media-press-inquiries-on-the-contact-page-do-not-delete-these-as-the-client-wants-to-utilize-them-in-time */}\n      <Section\n        theme=\"light\"\n        className=\"py-20 divide-y divide-gray-5 md:flex md:divide-y-0 md:divide-x\"\n      >\n        <div className=\"divide-y divide-gray-5 md:flex md:divide-y-0 md:divide-x max-w-6xl mx-auto w-full\">\n          {data.entry.contact2ColumnContent.map(\n            ({ contactContentBlock: blocks }) => {\n              const [block] = blocks\n              return (\n                <ContentColumn\n                  key={block.header}\n                  header={block.header}\n                  buttonText={\n                    block.buttonLabel || metadata.emailAddresses?.[block.email]!\n                  }\n                  copy={block.text}\n                  email={metadata.emailAddresses?.[block.email]!}\n                />\n              )\n            }\n          )}\n        </div>\n      </Section>\n      <Section theme=\"dark\" className=\"py-24 lg:py-48\">\n        <FullBgImage\n          image={data.entry.careers[0].singleMedia[0].image[0].url}\n        />\n        <div className=\"absolute inset-0 bg-black bg-opacity-25\"></div>\n        <div className=\"relative bg-black bg-opacity-75 px-4 py-24 md:py-32 text-center space-y-12 max-w-2xl mx-auto\">\n          <Typography variant=\"h3\" md=\"h2\">\n            {data.entry.careers[0].contactContentBlock[0].header}\n          </Typography>\n          <InPageCta\n            variant=\"secondary\"\n            theme=\"dark\"\n            href={`mailto:${\n              metadata.emailAddresses?.[\n                data.entry.careers[0].contactContentBlock[0].email\n              ]\n            }`}\n            link={true}\n          >\n            {data.entry.careers[0].contactContentBlock[0].buttonLabel ||\n              metadata.emailAddresses?.[\n                data.entry.careers[0].contactContentBlock[0].email\n              ]}\n          </InPageCta>\n        </div>\n      </Section>\n      {/* Removing for now: https://trello.com/c/X44hNZIA/182-disable-owner-support-media-press-inquiries-on-the-contact-page-do-not-delete-these-as-the-client-wants-to-utilize-them-in-time */}\n      {/* <Section theme=\"dark\" className=\"py-32\">\n        <div className=\"space-y-8 text-center lg:hidden\">\n          <Typography variant=\"h3\">{data.entry.support[0].header}</Typography>\n          <Typography variant=\"p3\">{data.entry.support[0].text}</Typography>\n          <InPageCta\n            variant=\"secondary\"\n            theme=\"dark\"\n            href={`mailto:${\n              metadata.emailAddresses?.[data.entry.support[0].email]\n            }`}\n            link\n          >\n            {data.entry.support[0].buttonLabel ||\n              metadata.emailAddresses?.[data.entry.support[0].email]}\n          </InPageCta>\n        </div>\n        <div className=\"hidden lg:flex justify-between max-w-4xl xl:max-w-5xl mx-auto\">\n          <div>\n            <Typography variant=\"h2\">{data.entry.support[0].header}</Typography>\n          </div>\n          <div className=\"space-y-8 pt-4\">\n            <Typography variant=\"p2\" className=\"max-w-md\">\n              {data.entry.support[0].text}\n            </Typography>\n            <InPageCta\n              variant=\"secondary\"\n              theme=\"dark\"\n              href={`mailto:${\n                metadata.emailAddresses?.[data.entry.support[0].email]\n              }`}\n              link\n            >\n              {data.entry.support[0].buttonLabel ||\n                metadata.emailAddresses?.[data.entry.support[0].email]}\n            </InPageCta>\n          </div>\n        </div>\n      </Section> */}\n    </Layout>\n  )\n}\n\nexport default ContactPage\n\nexport const query = graphql`\n  query Contact {\n    craftAPI {\n      entry(slug: \"contact\") {\n        ... on CraftAPI_contact_contact_Entry {\n          subtitle: textBlockCopy\n          title: textBlockHeader\n          heroBackground: singleMedia {\n            ... on CraftAPI_singleMedia_BlockType {\n              image {\n                ... on CraftAPI_s3_Asset {\n                  url\n                }\n              }\n            }\n          }\n          contact2ColumnContent {\n            ... on CraftAPI_contact2ColumnContent_column_BlockType {\n              contactContentBlock {\n                ... on CraftAPI_contactContentBlock_BlockType {\n                  email\n                  text\n                  buttonLabel\n                  header\n                }\n              }\n            }\n          }\n          support: contactContentBlock {\n            ... on CraftAPI_contactContentBlock_BlockType {\n              email\n              header\n              buttonLabel\n              text\n            }\n          }\n          careers: contactCareers {\n            ... on CraftAPI_contactCareers_careers_BlockType {\n              contactContentBlock {\n                ... on CraftAPI_contactContentBlock_BlockType {\n                  email\n                  text\n                  header\n                  buttonLabel\n                }\n              }\n              singleMedia {\n                ... on CraftAPI_singleMedia_BlockType {\n                  image {\n                    ... on CraftAPI_s3_Asset {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nfunction Section({\n  theme,\n  className,\n  ...props\n}: { theme: Theme } & React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <section\n      {...props}\n      className={clsx(\n        'relative px-4',\n        {\n          'bg-gray-0 text-white': theme === 'dark',\n          'bg-white text-black': theme === 'light',\n        },\n        className\n      )}\n    />\n  )\n}\n\nfunction FullBgImage({ image }: { image: string }) {\n  return (\n    <img\n      src={`${image}?q=30&w=2000&fm=jpg`}\n      alt=\"\"\n      className=\"absolute top-0 left-0 h-full w-full object-cover\"\n      style={{ position: 'absolute' }}\n    />\n  )\n}\n\nfunction IconWithContent({\n  icon: Icon,\n  children,\n}: {\n  icon: React.ElementType\n  children: React.ReactNode\n}) {\n  return (\n    <div className=\"space-y-6 lg:flex lg:space-y-0 justify-start items-center lg:space-x-6\">\n      <div className=\"mx-auto text-2xl border border-white rounded-full w-16 h-16 flex items-center justify-center lg:m-0\">\n        <Icon />\n      </div>\n      <Typography variant=\"p1\">{children}</Typography>\n    </div>\n  )\n}\n\nfunction ContentColumn({\n  header,\n  copy,\n  buttonText,\n  email,\n}: {\n  header: string\n  copy?: string\n  buttonText: string\n  email: string\n}) {\n  return (\n    <div className=\"text-center space-y-8 py-16 md:py-32 xl:py-48 md:w-1/2\">\n      <Typography variant=\"h3\" lg=\"h2\">\n        {header}\n      </Typography>\n      {copy && (\n        <Typography variant=\"p3\" lg=\"p2\" className=\"w-5/6 md:w-3/4 mx-auto\">\n          {copy}\n        </Typography>\n      )}\n      <InPageCta\n        variant=\"secondary\"\n        theme=\"light\"\n        href={`mailto:${email}`}\n        link={true}\n      >\n        {buttonText}\n      </InPageCta>\n    </div>\n  )\n}\n\nfunction IconLink({\n  icon: Icon,\n  href,\n}: {\n  icon: React.ElementType\n  href: string\n}) {\n  return (\n    <a href={href} target=\"_blank\" className=\"p-2\">\n      <Icon />\n    </a>\n  )\n}\n"],"sourceRoot":""}